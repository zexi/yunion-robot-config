tide:
  merge_method:
    yunionio: merge

  target_url: http://118.187.65.235:8080/tide.html

  queries:
  - orgs:
    - yunionio
    labels:
    - lgtm
    - approved
    missingLabels:
    - needs-work
    - do-not-merge
    - do-not-merge/hold
    - do-not-merge/work-in-progress
    - do-not-merge/contains-merge-commits
    - needs-rebase

  context_options:
    # Use branch protection options to define required and optional contexts
    from-branch-protection: true
    # Treat unknown contexts as optional
    skip-unknown-contexts: true
    orgs:
      org:
        required-contexts:
        - "check-required-for-all-repos"
        repos:
          repo:
            required-contexts:
             - "check-required-for-all-branches"
            branches:
              branch:
                from-branch-protection: false
                required-contexts:
                - "required_test"
                optional-contexts:
                - "optional_test"

plank:
  pod_pending_timeout: 60m
  default_decoration_config:
    timeout: 7200000000000 # 2h
    grace_period: 15000000000 # 15s
    utility_images:
      clonerefs: "registry.cn-beijing.aliyuncs.com/yunionio/clonerefs:v20190411-f81d8b1a0"
      initupload: "registry.cn-beijing.aliyuncs.com/yunionio/initupload:v20190411-f81d8b1a0"
      entrypoint: "registry.cn-beijing.aliyuncs.com/yunionio/entrypoint:v20190411-f81d8b1a0"
      sidecar: "registry.cn-beijing.aliyuncs.com/yunionio/sidecar:v20190411-f81d8b1a0"
    gcs_configuration:
      bucket: <bucket-name>
      path_strategy: explicit # or `legacy`, `single`
      default_org: yunionio
      default_repo: onecloud
    gcs_credentials_secret: <secret-name> # the name of the secret that stores the GCP service account credential JSON file, it expects the secret's key to

#periodics:
#- name: foo-job
  #decorate: true
  #path_alias: /go/src/yunion.io/x/onecloud
  #clone_uri: https://github.com/yunionio/onecloud
  #interval: 1m
  #spec:
    #containers:
      #- image: yunionio/onecloud-ci:latest
        #imagePullPolicy: Always
        #command:
        #- "echo"
        #args:
        #- "The dir is $(PWD)"

#presubmits:
  #yunionio/onecloud:
  #- name: unit-tests         # As for periodics.
    #always_run: true         # Run for every PR, or only when requested.
    #skip_report: false       # Whether to skip setting a status on GitHub.
    #context: unit-tests      # Status context. Usually the job name.
    #max_concurrency: 10      # As for postsubmits.
    #agent: kubernetes        # As for periodics.
    #namespace: prowjob
    #decorate: true
    #path_alias: yunionio.io/x/onecloud
    #spec:
      #hostNetwork: true
      #containers:
      #- image: registry.cn-beijing.aliyuncs.com/yunionio/d3lx-golang:yunion
        #command:
        #- make
        #args:
        #- test
    #trigger: "(?m)^/test this"
    #rerun_command: "/test this"
